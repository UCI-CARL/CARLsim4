var searchData=
[
  ['calcweightchanges_1140',['calcWeightChanges',['../classConnectionMonitor.html#a730c0ec47d470c8920ab57288c31ca3b',1,'ConnectionMonitor::calcWeightChanges()'],['../classConnectionMonitorCore.html#a730c0ec47d470c8920ab57288c31ca3b',1,'ConnectionMonitorCore::calcWeightChanges()']]],
  ['carlsim_1141',['CARLsim',['../classCARLsim.html#a736959594cf1835c567e0ba4a901bc95',1,'CARLsim']]],
  ['clear_1142',['clear',['../classConnectionMonitorCore.html#ac8bb3912a3ce86b15842e79d0b421204',1,'ConnectionMonitorCore::clear()'],['../classGroupMonitorCore.html#ac8bb3912a3ce86b15842e79d0b421204',1,'GroupMonitorCore::clear()'],['../classNeuronMonitor.html#ac8bb3912a3ce86b15842e79d0b421204',1,'NeuronMonitor::clear()'],['../classNeuronMonitorCore.html#ac8bb3912a3ce86b15842e79d0b421204',1,'NeuronMonitorCore::clear()'],['../classSpikeMonitor.html#ac8bb3912a3ce86b15842e79d0b421204',1,'SpikeMonitor::clear()'],['../classSpikeMonitorCore.html#ac8bb3912a3ce86b15842e79d0b421204',1,'SpikeMonitorCore::clear()']]],
  ['comparedelay_1143',['compareDelay',['../snn__manager_8cpp.html#af7e3c6ada8c131790477ada99ec34bc3',1,'snn_manager.cpp']]],
  ['comparesrcneuron_1144',['compareSrcNeuron',['../snn__manager_8cpp.html#a1def38e0226c02bafce71e62251d7e17',1,'snn_manager.cpp']]],
  ['connect_1145',['connect',['../classConnectionGenerator.html#acc48aef1290ee3761db2fad5011abab8',1,'ConnectionGenerator::connect()'],['../classConnectionGeneratorCore.html#ab165bd786ba0831b2c0a94ede912688b',1,'ConnectionGeneratorCore::connect()'],['../classCARLsim.html#a30b16b93d57551dcde0559e8a4e98e27',1,'CARLsim::connect(int grpId1, int grpId2, const std::string &amp;connType, const RangeWeight &amp;wt, float connProb, const RangeDelay &amp;delay=RangeDelay(1), const RadiusRF &amp;radRF=RadiusRF(-1.0), bool synWtType=SYN_FIXED, float mulSynFast=1.0f, float mulSynSlow=1.0f)'],['../classCARLsim.html#afe43f33ddd154aa799c2f1d1552bf988',1,'CARLsim::connect(int grpId1, int grpId2, ConnectionGenerator *conn, bool synWtType=SYN_FIXED)'],['../classCARLsim.html#a0567d9693e6f637491185975090a7d4c',1,'CARLsim::connect(int grpId1, int grpId2, ConnectionGenerator *conn, float mulSynFast, float mulSynSlow, bool synWtType=SYN_FIXED)'],['../classCARLsim_1_1Impl.html#afed01f52e943df5e5476428c4fbef8f7',1,'CARLsim::Impl::connect(int grpId1, int grpId2, const std::string &amp;connType, const RangeWeight &amp;wt, float connProb, const RangeDelay &amp;delay, const RadiusRF &amp;radRF, bool synWtType, float mulSynFast, float mulSynSlow)'],['../classCARLsim_1_1Impl.html#a64a4a7c3de1a19798e3d7587e9aa93d5',1,'CARLsim::Impl::connect(int grpId1, int grpId2, ConnectionGenerator *conn, bool synWtType)'],['../classCARLsim_1_1Impl.html#a0f14938b2e90e7ad4e3b913e12ef44a9',1,'CARLsim::Impl::connect(int grpId1, int grpId2, ConnectionGenerator *conn, float mulSynFast, float mulSynSlow, bool synWtType)'],['../classSNN.html#a6eec2a657455176862ab71d4ee762e07',1,'SNN::connect(int gIDpre, int gIDpost, const std::string &amp;_type, float initWt, float maxWt, float prob, uint8_t minDelay, uint8_t maxDelay, RadiusRF radius, float mulSynFast, float mulSynSlow, bool synWtType)'],['../classSNN.html#ab2bc279b1973e72d7b317b6b53f101c2',1,'SNN::connect(int gIDpre, int gIDpost, ConnectionGeneratorCore *conn, float mulSynFast, float mulSynSlow, bool synWtType)']]],
  ['connectcompartments_1146',['connectCompartments',['../classCARLsim.html#a7ce184c0de7c3d3c80b27a1ea7bb3e59',1,'CARLsim::connectCompartments()'],['../classCARLsim_1_1Impl.html#a7ce184c0de7c3d3c80b27a1ea7bb3e59',1,'CARLsim::Impl::connectCompartments()'],['../classSNN.html#a7ce184c0de7c3d3c80b27a1ea7bb3e59',1,'SNN::connectCompartments()']]],
  ['connectconfigmd_5fs_1147',['ConnectConfigMD_s',['../structConnectConfigMD__s.html#a5ec0f0504f87a88f66bf833a3dc02e55',1,'ConnectConfigMD_s']]],
  ['connectiongeneratorcore_1148',['ConnectionGeneratorCore',['../classConnectionGeneratorCore.html#a16305bf74eb6554e4e08c979e569196c',1,'ConnectionGeneratorCore']]],
  ['connectionmonitor_1149',['ConnectionMonitor',['../classConnectionMonitor.html#aa624f63e9b397f72c7fe78319a32c3e7',1,'ConnectionMonitor']]],
  ['connectionmonitorcore_1150',['ConnectionMonitorCore',['../classConnectionMonitorCore.html#a07a1970b46ca78c2b14e6ddc7e784e0f',1,'ConnectionMonitorCore']]],
  ['creategroup_1151',['createGroup',['../classCARLsim.html#a6e11c10b6b079715074d857452c42e11',1,'CARLsim::createGroup(const std::string &amp;grpName, int nNeur, int neurType, int preferredPartition=ANY, ComputingBackend preferredBackend=CPU_CORES)'],['../classCARLsim.html#a1f3fc840427123fe1f24f8563d9bd7e0',1,'CARLsim::createGroup(const std::string &amp;grpName, const Grid3D &amp;grid, int neurType, int preferredPartition=ANY, ComputingBackend preferredBackend=CPU_CORES)'],['../classCARLsim_1_1Impl.html#adf54d2d89b577be69beeca40c4e93efc',1,'CARLsim::Impl::createGroup(const std::string &amp;grpName, int nNeur, int neurType, int preferredPartition, ComputingBackend preferredBackend)'],['../classCARLsim_1_1Impl.html#a2301fb7a8931b6b91de61c19255a4dcc',1,'CARLsim::Impl::createGroup(const std::string &amp;grpName, const Grid3D &amp;grid, int neurType, int preferredPartition, ComputingBackend preferredBackend)'],['../classSNN.html#a2301fb7a8931b6b91de61c19255a4dcc',1,'SNN::createGroup()']]],
  ['creategrouplif_1152',['createGroupLIF',['../classCARLsim.html#a723d7b7887644e2444c980a5834414e3',1,'CARLsim::createGroupLIF(const std::string &amp;grpName, int nNeur, int neurType, int preferredPartition=ANY, ComputingBackend preferredBackend=CPU_CORES)'],['../classCARLsim.html#a26b150f31495df9dda324f5e3e5240f5',1,'CARLsim::createGroupLIF(const std::string &amp;grpName, const Grid3D &amp;grid, int neurType, int preferredPartition=ANY, ComputingBackend preferredBackend=CPU_CORES)'],['../classCARLsim_1_1Impl.html#a723d7b7887644e2444c980a5834414e3',1,'CARLsim::Impl::createGroupLIF(const std::string &amp;grpName, int nNeur, int neurType, int preferredPartition=ANY, ComputingBackend preferredBackend=CPU_CORES)'],['../classCARLsim_1_1Impl.html#ab47cbdc62b1d4af153d9f8395cf5e5b1',1,'CARLsim::Impl::createGroupLIF(const std::string &amp;grpName, const Grid3D &amp;grid, int neurType, int preferredPartition, ComputingBackend preferredBackend)'],['../classSNN.html#ab47cbdc62b1d4af153d9f8395cf5e5b1',1,'SNN::createGroupLIF()']]],
  ['createspikegeneratorgroup_1153',['createSpikeGeneratorGroup',['../classCARLsim.html#a0bf4d12b0b90740faf9a2f6a4add0351',1,'CARLsim::createSpikeGeneratorGroup(const std::string &amp;grpName, int nNeur, int neurType, int preferredPartition=ANY, ComputingBackend preferredBackend=CPU_CORES)'],['../classCARLsim.html#a1140f81bb80e9cc6de561c5213dd58d5',1,'CARLsim::createSpikeGeneratorGroup(const std::string &amp;grpName, const Grid3D &amp;grid, int neurType, int preferredPartition=ANY, ComputingBackend preferredBackend=CPU_CORES)'],['../classCARLsim_1_1Impl.html#ac0226503b3b9761dcfc076af9319a5f9',1,'CARLsim::Impl::createSpikeGeneratorGroup(const std::string &amp;grpName, int nNeur, int neurType, int preferredPartition, ComputingBackend preferredBackend)'],['../classCARLsim_1_1Impl.html#ae84b2469456be28869fd1cf8d6b7c6b2',1,'CARLsim::Impl::createSpikeGeneratorGroup(const std::string &amp;grpName, const Grid3D &amp;grid, int neurType, int preferredPartition, ComputingBackend preferredBackend)'],['../classSNN.html#ae84b2469456be28869fd1cf8d6b7c6b2',1,'SNN::createSpikeGeneratorGroup()']]]
];
